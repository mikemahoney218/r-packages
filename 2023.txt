From m@pjg @end|ng |rom br|@to|@@c@uk  Sun Jan  8 15:13:52 2023
From: m@pjg @end|ng |rom br|@to|@@c@uk (Peter Green)
Date: Sun, 8 Jan 2023 14:13:52 +0000
Subject: [R-pkgs] gRaven package - Bayes Nets: 'RHugin' Emulation with
 'gRain'
Message-ID: <3877ec85-3309-fec1-5cd5-579f291d401f@bristol.ac.uk>

Dear all,

I am pleased to announce that CRAN now hosts my package gRaven.

This provides wrappers for functions in the 'gRain' package to emulate 
some 'RHugin' functionality, allowing the building of Bayesian networks 
consisting of discrete chance nodes incrementally - through adding 
nodes, edges and conditional probability tables, the setting of 
evidence, whether 'hard' (boolean) or 'soft' (likelihoods), and querying 
marginal joint probabilities and normalizing constants.

Computations will typically not be so fast as they are with 'RHugin', 
but this package should assist users without access to the commercial 
package 'Hugin' to use existing code written to use 'RHugin'.

I am open to extending the functionality of the package in future, in 
response to user demand.

regards,

Peter Green

-- 
Peter Green, p.j.green at bristol.ac.uk
-- 
Emeritus Professor of Statistics & Professorial Research Fellow
University of Bristol, Bristol BS8 1UG, UK
T: +44 117 455 2611; W: https://petergreenweb.wordpress.com/


From @t@|v|vek @end|ng |rom y@hoo@co@|n  Wed Jan 11 19:41:56 2023
From: @t@|v|vek @end|ng |rom y@hoo@co@|n (Vivek Atal)
Date: Wed, 11 Jan 2023 18:41:56 +0000 (UTC)
Subject: [R-pkgs] New CRAN package announcement: azlogr
References: <1506840172.8984.1673462516211.ref@mail.yahoo.com>
Message-ID: <1506840172.8984.1673462516211@mail.yahoo.com>

I am excited to announce that `azlogr` is published on CRAN!
This package?enables logging in 'R' by extending the functionality of 'logger' package. There is an option to add additional custom meta-data while logging, which can sometimes be helpful.?Logging messages are displayed on console and optionally they are sent to 'Azure Log Analytics' workspace in real-time.
The package comes with a vignette, How to use azlogr, that (hopefully) provides a good introduction to using the functions for easy logging. Example usage below:
# Azure Log Analytics workspace id and shared key are fetched
# from environment variables.
Sys.setenv(AZ_LOG_ID = "<enter-your-Azure-Log-Analytics-workspace-id>")
Sys.setenv(AZ_LOG_KEY = "<enter-your-Azure-Log-Analytics-shared-key>")

library(azlogr)

# Optionally, add additional meta-data, `country` and `id`, to be collected
# while logging, on top of the default fields - 'level', 'time', 'msg'.
set_log_config(
  log_fields = c("level", "time", "msg"),
  additional_fields = list(country = "in", id = 123)
)

# Use logger_* functions with appropriate logging level to log.
# If POST is successful, then it will be available in custom log table on
# Azure Log Analytics, by default table name will be `log_from_r`_CL (_CL is
# added by Azure for any custom log table)
logger_info("log info sent to Azure")
#> {"level":"INFO","time":"2023-01-11 13:15:04","msg":"log info sent to Azure","country":"in","id":123}

# If the POST request is unsuccessful due to Azure credential issue, then log
# message is displayed on console and a warning is generated with error details.
logger_info("log info sent to Azure")
#> {"level":"INFO","time":"2023-01-11 13:15:04","msg":"log info sent to Azure","country":"in","id":123}
#> Warning message:
#> In logger_level(logger::INFO, ...) :
#>   Some error happened while sending POST request to 'Azure Log Analytics' workspace.
#> Error message: Error in curl::curl_fetch_memory(url, handle = handle) :
#>   Could not resolve host: abcd.ods.opinsights.azure.com
Many thanks to the author of?'logger' package,?and to the CRAN team for a speedy onboarding!

RegardsVivek Atal
	[[alternative HTML version deleted]]


From dj@ndr|j@ @end|ng |rom gm@||@com  Tue Jan 31 08:05:58 2023
From: dj@ndr|j@ @end|ng |rom gm@||@com (Andrija Djurovic)
Date: Tue, 31 Jan 2023 08:05:58 +0100
Subject: [R-pkgs] New package - LGDtoolkit
Message-ID: <CABcwgRQ+UhisX0tPPgJt1WWpwvF2qT9rsP8B5FfvDzBP1LCwTw@mail.gmail.com>

Dear all,

my new R package LGDtoolkit is now on CRAN.

The goal of this package is to cover the most common steps in Loss Given
Default (LGD) rating model development. The main procedures available are
those that refer to bivariate and multivariate analysis.
In particular two statistical methods for multivariate analysis are
currently implemented ? OLS regression and fractional logistic regression.
Both methods are also available within different blockwise model designs,
and both have customized stepwise algorithms. To cover other important
steps for LGD model development, it is recommended to use 'LGDtoolkit'
package along with 'PDtoolkit', and 'monobin' (or 'monobinShiny') packages.

With the next releases package will be extended with a new features. In
particular, validation procedures will be added, and significant part of
the package will be dedicated to the usage of survival analysis for LGD
modeling (extrapolation of LGD for incomplete recoveries, development of
risk differentiation function and collateral haircut modeling).

To check out the current package functionalities run
install.packages("LGDtoolkit") and help(package = "LGDtoolkit").
To stay up to date with new development features follow the github page:
https://github.com/andrija-djurovic/LGDtoolkit.

I hope some of you will find the package useful.

Kind regards,
Andrija

	[[alternative HTML version deleted]]


